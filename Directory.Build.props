<Project>
  <PropertyGroup>
    <!-- Give a base reference for the entire repository -->
    <EnlistmentRoot>$(MSBuildThisFileDirectory.TrimEnd('\\'))</EnlistmentRoot>

    <!-- Use a consistent artifacts path for the entire repository -->
    <BaseArtifactsPath>$(EnlistmentRoot)\artifacts</BaseArtifactsPath>

    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>

    <DefaultItemExcludes>$(DefaultItemExcludes)</DefaultItemExcludes>
    <Deterministic>true</Deterministic>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>

    <!-- For code analysis rules -->
    <!-- <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)/Kuiper.ruleset</CodeAnalysisRuleSet> -->

    <!-- Don't expose experimental features -->
    <ExposeExperimentalFeatures Condition="'$(ExposeExperimentalFeatures)' == ''">false</ExposeExperimentalFeatures>

    <!-- Use Lock File for Restores -->
    <!-- https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/ -->
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
  </PropertyGroup>

  <!-- Build Versioning -->
  <Import Project="$(EnlistmentRoot)\Directory.Package.props" Condition="Exists('$(EnlistmentRoot)\Directory.Package.props')" />
  <Import Project="$(EnlistmentRoot)\Directory.Version.props" Condition="Exists('$(EnlistmentRoot)\Directory.Version.props')" />
  <Import Project="$(EnlistmentRoot)\Directory.CodeAnalysis.props" Condition="Exists('$(EnlistmentRoot)\Directory.CodeAnalysis.props')" />

  <ItemGroup>
    <SlnGenSolutionItem Include="$(MSBuildThisFileDirectory)Directory.Build.props;
                        $(MSBuildThisFileDirectory)Directory.Build.rsp;
                        $(MSBuildThisFileDirectory)Directory.Build.targets;
                        $(MSBuildThisFileDirectory)Directory.Package.props;
                        $(MSBuildThisFileDirectory)Directory.Packages.props;
                        $(MSBuildThisFileDirectory)Directory.Version.props;
                        $(MSBuildThisFileDirectory)Directory.CodeAnalysis.props;
                        $(MSBuildThisFileDirectory)dirs.proj;
                        $(MSBuildThisFileDirectory)global.json;
                        $(MSBuildThisFileDirectory)nuget.config;
                        $(MSBuildThisFileDirectory)version.json;
                        $(MSBuildThisFileDirectory)README.md" />
  </ItemGroup>
</Project>